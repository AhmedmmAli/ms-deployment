
include:
  - template: Terraform/Base.latest.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Terraform/Base.latest.gitlab-ci.yml
  - template: Jobs/SAST-IaC.latest.gitlab-ci.yml # https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/SAST-IaC.latest.gitlab-ci.yml

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/
  TF_STATE_NAME: EKS-demo
  TF_CACHE_KEY: default
  TF_VAR_access_key: $AWS_ACCESS_KEY_ID
  TF_VAR_secret_key: $AWS_SECRET_ACCESS_KEY
  TF_VAR_region: $AWS_DEFAULT_REGION
  
stages:
  - validate
  - test
  - build
  - deploy
  - destroy

fmt:
  extends: .terraform:fmt
  needs: []


Build:
  stage: build
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform plan --var-file=variables/eks.tfvars
    - gitlab-terraform plan-json --var-file=variables/eks.tfvars
  resource_group: ${TF_STATE_NAME}
  artifacts:
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json


Deploy:
  stage: deploy
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform apply
  dependencies:
    - Build
  resource_group: ${TF_STATE_NAME}
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual

Destroy:
  stage: destroy
  script: 
    - cd "${TF_ROOT}"
    - gitlab-terraform destroy --var-file=variables/eks.tfvars
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: manual
  environment:
    name: $TF_STATE_NAME